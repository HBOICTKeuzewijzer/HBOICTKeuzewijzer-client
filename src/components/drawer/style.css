/* -------------------------------------------------------------
 * Drawer Component Stylesheet
 *
 * Defines appearance and animation behavior for the <x-drawer> web component.
 * ------------------------------------------------------------- */

:host([open]) [data-drawer] {
    display: block;
    animation: slideIn 500ms forwards;
}

:host([open][backdrop]) [data-backdrop] {
    display: flex;
    animation: var(--animate-overlay-show);
}

:host([closing]) [data-drawer] {
    display: block;
    animation: slideOut 300ms forwards;
}

:host {
    --transform-y: 100%;
    position: relative;

    & [data-drawer] {
        display: none;
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        border-radius: var(--rounded-lg) var(--rounded-lg) 0 0;
        background-color: #fff;
        box-shadow:
            rgb(255, 255, 255) 0 0 0 0,
            rgba(var(--color-gray-2), 0.2) 0 0 0 1px,
            rgba(0, 0, 0, 0.1) 0 20px 25px -5px,
            rgba(0, 0, 0, 0.1) 0 8px 10px -6px;
        z-index: 25;

        & [data-handle] {
            height: 0.5rem;
            width: 100px;
            margin: 1rem auto 0;
            border-radius: var(--rounded-full);
            background-color: rgba(var(--color-gray-1), 0.2);
        }

        & [data-content] {
            width: 100%;
            max-height: 375px;
            display: flex;
            flex-direction: column;
            margin: 0 auto;
            overflow-y: auto;
        }
    }

    & [data-backdrop] {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(var(--color-black), 0.2);
        z-index: 20;
    }
}

@media (min-width: 640px) {
    [data-content] {
        max-width: 640px !important;
    }
}

@keyframes slideIn {
    from {
        opacity: 1;
        transform: translate3d(0, var(--transform-y), 0) scale3d(1, 1, 1) rotate(0);
    }
}

@keyframes slideOut {
    to {
        opacity: 1;
        transform: translate3d(0, var(--transform-y), 0) scale3d(1, 1, 1) rotate(0);
    }
}
